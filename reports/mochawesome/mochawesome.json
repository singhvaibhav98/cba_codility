{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-05-13T09:30:26.643Z",
    "end": "2024-05-13T09:30:35.226Z",
    "duration": 8583,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1b7b01b1-67f3-4e1b-9c8a-2db30c17f94e",
      "title": "",
      "fullFile": "cypress\\api\\api-petstore.spec.js",
      "file": "cypress\\api\\api-petstore.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "32d62457-f74f-4289-bd48-27b306255eb3",
          "title": "Petstore API Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a pet if could not find",
              "fullTitle": "Petstore API Tests should create a pet if could not find",
              "timedOut": null,
              "duration": 3068,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Find the pet by ID\ncy.request({\n  method: 'GET',\n  url: '/v2/pet/1500',\n  failOnStatusCode: false\n}).then(function (response) {\n  if (response.status === 404) {\n    // Create a new pet if not found\n    cy.request('POST', '/v2/pet', {\n      id: 1500,\n      name: 'Tommy',\n      status: 'available'\n    }).then(function (response) {\n      expect(response.status).to.equal(200);\n    });\n  }\n});",
              "err": {},
              "uuid": "be612648-73d9-4141-8f59-641ff783bf27",
              "parentUUID": "32d62457-f74f-4289-bd48-27b306255eb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find and update a pet",
              "fullTitle": "Petstore API Tests should find and update a pet",
              "timedOut": null,
              "duration": 1040,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', '/v2/pet/1500').its('body').then(function (pet) {\n  // Ensure the pet is found\n  expect(pet).to.have.property('name', 'Tommy');\n  expect(pet).to.have.property('status', 'available');\n  pet.status = 'sold';\n  return cy.request('PUT', '/v2/pet', pet);\n}).then(function (response) {\n  expect(response.status).to.equal(200);\n});",
              "err": {},
              "uuid": "a685aa45-7f5d-477b-a610-dd0d3dd05016",
              "parentUUID": "32d62457-f74f-4289-bd48-27b306255eb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find and update pet name",
              "fullTitle": "Petstore API Tests should find and update pet name",
              "timedOut": null,
              "duration": 994,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', '/v2/pet/1500').its('body').then(function (pet) {\n  expect(pet).to.have.property('name', 'Tommy');\n  pet.name = 'Jumbo';\n  return cy.request('PUT', '/v2/pet', pet);\n}).then(function (response) {\n  expect(response.status).to.equal(200);\n});",
              "err": {},
              "uuid": "62b78fc1-f0cc-408d-8f9b-11771e894ad6",
              "parentUUID": "32d62457-f74f-4289-bd48-27b306255eb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete a pet",
              "fullTitle": "Petstore API Tests should delete a pet",
              "timedOut": null,
              "duration": 822,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Delete the pet\ncy.request('DELETE', '/v2/pet/1500').then(function (response) {\n  expect(response.status).to.equal(200);\n});",
              "err": {},
              "uuid": "f702f0df-f01a-4bb3-a4f1-27c5e6f285b6",
              "parentUUID": "32d62457-f74f-4289-bd48-27b306255eb3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be612648-73d9-4141-8f59-641ff783bf27",
            "a685aa45-7f5d-477b-a610-dd0d3dd05016",
            "62b78fc1-f0cc-408d-8f9b-11771e894ad6",
            "f702f0df-f01a-4bb3-a4f1-27c5e6f285b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5924,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome",
        "charts": true,
        "reportPageTitle": "Test Automation Result",
        "embeddedScreenshots": true,
        "inlineAssets": false,
        "saveAllAttempts": true,
        "debug": true
      },
      "version": "6.2.0"
    }
  }
}